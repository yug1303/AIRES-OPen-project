# -*- coding: utf-8 -*-
"""Copy of Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jogJCjOOmd-UZOoqmAANdZrIWPMM4guE

Prerequisite
"""

!pip install --upgrade diffusers transformers -q

# !pip install diffusers transformers
# !git clone https://github.com/nolanaatama/stable-diffusion-webui-colab
# !cd stable-diffusion-webui-colab

# !curl -Lo model.safetensors https://huggingface.co/nolanaatama/nvrndngdrm/resolve/main/nvrndngdrm.safetensors

# !pip install diffusers

# import os

# import os
# from diffusers import StableDiffusionPipeline

# # Check if the model files exist in the current directory
# if not os.path.exists("./model_index.json"):
#     # Redownload the model files
#     !curl -Lo model.safetensors https://huggingface.co/nolanaatama/nvrndngdrm/resolve/main/nvrndngdrm.safetensors

# # Load the pipeline from the specified directory
# pipe = StableDiffusionPipeline.from_pretrained("./stable-diffusion-webui-colab").to("cuda")

# # Generate the image
# image = pipe("Your prompt here").images[0]

# # Display the image
# plt.imshow(image)
# plt.show()

"""Importing stuff"""

from pathlib import Path
import tqdm
import torch
import pandas as pd
import numpy as np
from diffusers import StableDiffusionPipeline
from transformers import pipeline, set_seed
import matplotlib.pyplot as plt
import matplotlib.pyplot as plt
import cv2

# import torch

# print(torch.cuda.is_available())

class CFG:
    device = "cuda"
    seed = 42
    generator = torch.Generator(device).manual_seed(seed)
    image_gen_steps = 35
    image_gen_model_id = "stabilityai/stable-diffusion-2"
    image_gen_size = (400,400)
    image_gen_guidance_scale = 9
    prompt_gen_model_id = "gpt2"
    prompt_dataset_size = 6
    prompt_max_length = 12

pip install accelerate

image_gen_model = StableDiffusionPipeline.from_pretrained(
    CFG.image_gen_model_id, torch_dtype=torch.float16,
    revision="fp16", use_auth_token='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', guidance_scale=9
)
image_gen_model = image_gen_model.to(CFG.device)

def generate_image(prompt, model):
    image = model(
        prompt, num_inference_steps=CFG.image_gen_steps,
        generator=CFG.generator,
        guidance_scale=CFG.image_gen_guidance_scale
    ).images[0]

    image = image.resize(CFG.image_gen_size)
    return image

generate_image("astronaut in space", image_gen_model)